######################### Code to filter stopwords for all
from nltk.corpus import stopwords
import string
#nltk.download('stopwords')

filteredRecords = []
for index, record in enumerate(labeledDocs):
    filteredWords= [word for word in nltk.word_tokenize(record[0]) if not word in stopwords.words()]
    filteredSentence = (" ").join(filteredWords)
    #labeledDocs[index]=[filteredSentence, record[1]]
    filteredRecords.append([filteredSentence, record[1]])


################ code to check stop word removal for limited no of reocrds #
from nltk.corpus import stopwords
#nltk.download('stopwords')

print('[Before removing stop Words]\n'+labeledDocs[3][0])

filteredRecords = []
count = 0
for record in labeledDocs:
    filteredWords= [word for word in nltk.word_tokenize(record[0]) if not word in stopwords.words()]
    filteredSentence = (" ").join(filteredWords)
    #labeledDocs[index]=[filteredSentence, record[1]]
    filteredRecords.append([filteredSentence, record[1]])
    if(count==5): break
    else: count +=1

print('\n[After removing stop words]\n'+filteredRecords[3][0])

################################## function to covert text to lists

def Txt2List(filepath):
    # Function that partitions text data into partitions
    # Return type is a list of a random samples from the text file
    
    file = open(filepath, 'r',  encoding="utf8")
    FileContent = file.read().replace('\n', ' ')
    file.close
    
    WordList = re.split(r'\W+', FileContent)
    RequiredPartitions = 200
    WordsPerPartition = 100
    records = []
    
    for i in range(int(len(WordList)/WordsPerPartition)):
        records.append(' '.join(WordList[i*WordsPerPartition : i*WordsPerPartition + WordsPerPartition]))
        
    return random.sample(records[50:], 200)


################ Code to extracts texts in a location and convert create labeled records in DataFRame

files = glob.glob('books/*.txt')
df = pd.DataFrame(columns=['Text','Label'])
Label = 65
BookLabels = {}
for book in files:
    tdf = pd.DataFrame()
    tdf['Text'] = Txt2List(book)
    tdf['Label'] = chr(Label)
    df = df.append(tdf, ignore_index=True)
    
    BookLabels[re.split(r"books\\", book)[-1]] = chr(Label)
    Label += 1
